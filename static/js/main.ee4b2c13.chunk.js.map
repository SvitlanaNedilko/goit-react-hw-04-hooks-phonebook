{"version":3,"sources":["components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","index.js"],"names":["ContactList","contacts","onDeleteContact","className","map","id","name","number","onClick","Filter","filter","changeFilter","type","value","onChange","ContactForm","onSubmit","useState","setName","setNumber","nameInputId","shortid","generate","numberInputId","e","preventDefault","htmlFor","pattern","title","required","event","currentTarget","App","setContasts","setFilter","useEffect","contactss","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","contact","includes","find","alert","prevContacts","contactId","prevState","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.ee4b2c13.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './ContactList.scss'\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"ContactList\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className=\"ContactList_Item\" key={id}>\r\n          <p className=\"ContactList_Name\">{name}</p>\r\n          <p>{number}</p>\r\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n}\r\n\r\nexport default ContactList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './Filter.scss'\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <label className=\"Filter_Input\">\r\n      Find contacts by name\r\n      <input type=\"text\" value={filter} onChange={changeFilter} />\r\n    </label>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Filter\r\n","import React, { useState } from 'react'\r\nimport shortid from 'shortid'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './ContactForm.scss'\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const nameInputId = shortid.generate()\r\n  const numberInputId = shortid.generate()\r\n\r\n  const handleInputChangeName = (event) => {\r\n    setName(event.currentTarget.value)\r\n  }\r\n\r\n  const handleInputChangeNumber = (event) => {\r\n    setNumber(event.currentTarget.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    onSubmit({ name, number })\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n\r\n  return (\r\n    <form className=\"ContactForm\" onSubmit={handleSubmit}>\r\n      <label className=\"ContactForm_Input\" htmlFor={nameInputId}>\r\n        Имя\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChangeName}\r\n          id={nameInputId}\r\n        />\r\n      </label>\r\n      <label className=\"ContactForm_Input\" htmlFor={numberInputId}>\r\n        Телефон\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInputChangeNumber}\r\n          id={numberInputId}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default ContactForm\r\n","import { useState, useEffect } from 'react'\nimport shortid from 'shortid'\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport './App.scss'\n\nfunction App() {\n  const [contacts, setContasts] = useState([])\n  const [filter, setFilter] = useState('')\n\n  const formsSubmitHandler = ({ name, number }) => {\n    const isPresentName = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    )\n    if (isPresentName) {\n      alert(`${name} is already in contacts`)\n    } else {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      }\n\n      setContasts((prevContacts) => [...prevContacts, contact])\n    }\n  }\n\n  const onDeleteContact = (contactId) => {\n    setContasts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    )\n  }\n\n  const changeFilter = (event) => {\n    setFilter(event.currentTarget.value)\n  }\n\n  useEffect(() => {\n    const contactss = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(contactss)\n    if (parsedContacts) {\n      setContasts(parsedContacts)\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  const normalizedFilter = filter.toLowerCase()\n\n  const visibleContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  )\n\n  return (\n    <div className=\"AppRoot\">\n      <h1 className=\"AppTitle\">Phonebook</h1>\n      <ContactForm onSubmit={formsSubmitHandler} />\n\n      <h2 className=\"AppTitle\">Contacts</h2>\n      <Filter filter={filter} changeFilter={changeFilter} />\n\n      <ContactList\n        contacts={visibleContacts}\n        onDeleteContact={onDeleteContact}\n      />\n    </div>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}